pipeline{
    agent any
    tools {
        maven 'maven3'
    }
    stages{
        stage('Maven Build'){
            steps{
                sh "mvn clean package"
            }
        }
        stage('Docker Build'){
            steps{
                sh "docker build . -t kammana/mywebapp:${dockerTag()}"
            }
        }
        stage('DockerHub Push Image'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerPwd')]) {
                    sh "docker login -u kammana -p ${dockerPwd}"
                }
                
                sh "docker push kammana/mywebapp:${dockerTag()}"
            }
        }
        stage('Docker Deploy Dev'){
            steps{
                sshagent(['docker-host-dev']) {
                    script{
                        def dkrRun = "docker run -d -p 8080:8080 --name mywebapp kammana/mywebapp:${dockerTag()}"
                        sh script: "ssh -o StrictHostKeyChecking=no ec2-user@172.31.47.245 docker rm -f mywebapp",
			   returnStatus: true
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.47.245 ${dkrRun}"
                    }
                }
            }
        }
    }
}

def dockerTag(){
    def commitId = sh returnStdout: true, script: 'git rev-parse --short HEAD'
	return commitId
}
